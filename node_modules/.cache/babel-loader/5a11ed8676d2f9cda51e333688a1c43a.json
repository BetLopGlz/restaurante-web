{"ast":null,"code":"import _defineProperty from \"D:\\\\Bootcamp\\\\restaurant-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\Bootcamp\\\\restaurant-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Bootcamp\\\\restaurant-react\\\\src\\\\componentes\\\\reservaciones\\\\FormularioReservaciones.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState } from 'react';\nimport '../../App.css';\n\nconst FormularioReservaciones = () => {\n  const styleB = {\n    backgroundColor: '#ea8118',\n    borderColor: '#ea8118'\n  };\n\n  const _useState = useState({\n    nombre: '',\n    email: '',\n    telefono: '',\n    fecha: '',\n    hora: '',\n    noPersonas: '',\n    indicaciones: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cita = _useState2[0],\n        actualizarCita = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        actualizarError = _useState4[1]; // FunciÃ³n que se ejecuta cada que el usuario escribe en un input\n\n\n  const actualizarState = e => {\n    actualizarCita(_objectSpread({}, cita, {\n      [e.target.name]: e.target.value\n    }));\n  }; // Extraer los valores\n\n\n  const nombre = cita.nombre,\n        email = cita.email,\n        telefono = cita.telefono,\n        fecha = cita.fecha,\n        hora = cita.hora,\n        noPersonas = cita.noPersonas,\n        indicaciones = cita.indicaciones;\n\n  const submitCita = e => {\n    e.preventDefault(); // Validar\n\n    if (nombre.trim() === '' || email.trim() === '' || telefono.trim() === '' || fecha.trim() === '' || hora.trim() === '' || noPersonas.trim() === '' || indicaciones.trim() === '') {\n      actualizarError(true);\n      return;\n    } // Eliminar el mensaje previo \n\n\n    actualizarError(false);\n    console.log(cita); // Reiniciar el form\n\n    actualizarCita({\n      nombre: '',\n      email: '',\n      telefono: '',\n      fecha: '',\n      hora: '',\n      noPersonas: '',\n      indicaciones: ''\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, error ? React.createElement(\"p\", {\n    className: \"alerta-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Todos los campos son obligatorios\") : null, React.createElement(\"form\", {\n    className: \"mb-4\",\n    onSubmit: submitCita,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"nya\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Nombre y Apellidos\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"nombre\",\n    required: true,\n    onChange: actualizarState,\n    value: nombre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    name: \"email\",\n    required: true,\n    onChange: actualizarState,\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"telefono\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Telefono\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"telefono\",\n    name: \"telefono\",\n    required: true,\n    onChange: actualizarState,\n    value: telefono,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"fecha\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Fecha:\"), React.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-control\",\n    className: \"form-control\",\n    id: \"fecha\",\n    name: \"fecha\",\n    required: true,\n    onChange: actualizarState,\n    value: fecha,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"hora\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Hora\"), React.createElement(\"input\", {\n    type: \"time\",\n    name: \"hora\",\n    className: \"form-control\",\n    required: true,\n    onChange: actualizarState,\n    value: hora,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"noPersonas\",\n    className: \"negrita\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"No. de Personas\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"noPersonas\",\n    className: \"form-control\",\n    required: true,\n    onChange: actualizarState,\n    value: noPersonas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"indicaciones\",\n    className: \"negrita\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Indicaciones Especiales\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"indicaciones\",\n    name: \"indicaciones\",\n    onChange: actualizarState,\n    value: indicaciones,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    style: styleB,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Reservar\")));\n};\n\nexport default FormularioReservaciones;","map":{"version":3,"sources":["D:\\Bootcamp\\restaurant-react\\src\\componentes\\reservaciones\\FormularioReservaciones.js"],"names":["React","Fragment","useState","FormularioReservaciones","styleB","backgroundColor","borderColor","nombre","email","telefono","fecha","hora","noPersonas","indicaciones","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","console","log"],"mappings":"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","sourcesContent":["import React, {Fragment,useState}  from 'react';\r\nimport '../../App.css';\r\n\r\n\r\n\r\n\r\nconst FormularioReservaciones = () =>    {\r\n  const styleB={\r\n    backgroundColor:'#ea8118',\r\n  borderColor:'#ea8118'\r\n  }  \r\n\r\n  const [cita, actualizarCita] = useState({\r\n    nombre: '',\r\n    email: '',\r\n    telefono: '',\r\n    fecha: '',\r\n   hora: '',\r\n   noPersonas: '',\r\n   indicaciones: '',\r\n});\r\nconst [ error, actualizarError ] = useState(false)\r\n\r\n// FunciÃ³n que se ejecuta cada que el usuario escribe en un input\r\nconst actualizarState = e => {\r\n  actualizarCita({\r\n    ...cita,\r\n    [e.target.name]: e.target.value \r\n })\r\n}\r\n\r\n// Extraer los valores\r\nconst { nombre,email,telefono,fecha,hora,noPersonas,indicaciones } = cita;\r\nconst submitCita = e => {\r\n  e.preventDefault();\r\n \r\n// Validar\r\nif(nombre.trim() === '' || email.trim() === ''  || telefono.trim() === ''  || fecha.trim() === ''  || hora.trim() === '' || noPersonas.trim()===''|| indicaciones.trim()==='' ){\r\n  actualizarError(true);\r\n  return;\r\n}\r\n\r\n// Eliminar el mensaje previo \r\nactualizarError(false);\r\n  console.log(cita)\r\n\r\n  // Reiniciar el form\r\n  actualizarCita({\r\n    nombre: '',\r\n    email: '',\r\n    telefono: '',\r\n    fecha: '',\r\n   hora: '',\r\n   noPersonas: '',\r\n   indicaciones: '',\r\n})\r\n}\r\n\r\n  return (\r\n    <Fragment>\r\n    { error? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null }\r\n      <form className=\"mb-4\" onSubmit={submitCita}>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nya\" className=\"negrita\">Nombre y Apellidos</label>\r\n          <input type=\"text\" className=\"form-control\" name=\"nombre\" required onChange={actualizarState} value={nombre}/>            \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"negrita\">Email</label>\r\n          <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" required onChange={actualizarState} value={email}/> \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"telefono\" className=\"negrita\">Telefono</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"telefono\" name=\"telefono\" required onChange={actualizarState} value={telefono} />\r\n        </div>\r\n\r\n        <div><label htmlFor=\"fecha\" className=\"negrita\">Fecha:</label>\r\n        <input type=\"date\" className=\"form-control\" className=\"form-control\" id=\"fecha\" name=\"fecha\" required onChange={actualizarState} value={fecha}/>\r\n        </div> \r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"hora\" className=\"negrita\">Hora</label>\r\n          <input type=\"time\" name=\"hora\" className=\"form-control\" required onChange={actualizarState} value={hora}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"noPersonas\" className=\"negrita\" required>No. de Personas</label>\r\n          <input type=\"number\" name=\"noPersonas\" className=\"form-control\" required onChange={actualizarState} value={noPersonas}/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"indicaciones\" className=\"negrita\">Indicaciones Especiales</label>\r\n          <textarea className=\"form-control\" id=\"indicaciones\" name=\"indicaciones\" onChange={actualizarState} value={indicaciones}></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styleB} className=\"btn btn-dark\">Reservar</button>\r\n\r\n      </form>\r\n      </Fragment>\r\n  )\r\n  \r\n}\r\n\r\n   \r\n\r\n\r\nexport default FormularioReservaciones;"]},"metadata":{},"sourceType":"module"}